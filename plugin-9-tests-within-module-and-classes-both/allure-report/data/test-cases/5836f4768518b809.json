{"uid":"5836f4768518b809","name":"test_multi_input[1-4-5]","fullName":"tests.test_example#test_multi_input","historyId":"1f3bbb1bdb0654a7b704856942639e43","time":{"start":1745297969365,"stop":1745297969368,"duration":3},"status":"failed","statusMessage":"AssertionError: assert (1 * 4) == 5","statusTrace":"a = 1, b = 4, expected = 5, integration = 'integration-db-session'\nconfig = {'env': 'staging', 'timeout': 30}\n\n    @allure.epic(\"Math Operations\")\n    @allure.feature(\"Multiply\")\n    @allure.story(\"Simple multiply case\")\n    @pytest.mark.api\n    @pytest.mark.sanity\n    @pytest.mark.smoke\n    @pytest.mark.slow\n    @pytest.mark.testrail_id(\"C1002\", \"C1003\")\n    def test_multi_input(a, b, expected, integration, config):\n        print(f\"Running with {integration} and config {config}\")\n>       assert a * b == expected\nE       assert (1 * 4) == 5\n\ntests/test_example.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"integration","time":{"start":1745297969337,"stop":1745297969337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"config","time":{"start":1745297969337,"stop":1745297969337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (1 * 4) == 5","statusTrace":"a = 1, b = 4, expected = 5, integration = 'integration-db-session'\nconfig = {'env': 'staging', 'timeout': 30}\n\n    @allure.epic(\"Math Operations\")\n    @allure.feature(\"Multiply\")\n    @allure.story(\"Simple multiply case\")\n    @pytest.mark.api\n    @pytest.mark.sanity\n    @pytest.mark.smoke\n    @pytest.mark.slow\n    @pytest.mark.testrail_id(\"C1002\", \"C1003\")\n    def test_multi_input(a, b, expected, integration, config):\n        print(f\"Running with {integration} and config {config}\")\n>       assert a * b == expected\nE       assert (1 * 4) == 5\n\ntests/test_example.py:27: AssertionError","steps":[],"attachments":[{"uid":"70c8e3a57aca08af","name":"log","source":"70c8e3a57aca08af.txt","type":"text/plain","size":235},{"uid":"2bd6f1421cdb8cfb","name":"stdout","source":"2bd6f1421cdb8cfb.txt","type":"text/plain","size":81}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[{"name":"config::0","time":{"start":1745297969435,"stop":1745297969436,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"integration::0","time":{"start":1745297969439,"stop":1745297969440,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"epic","value":"Math Operations"},{"name":"story","value":"Simple multiply case"},{"name":"feature","value":"Multiply"},{"name":"tag","value":"testrail_id('C1002', 'C1003')"},{"name":"tag","value":"slow"},{"name":"tag","value":"smoke"},{"name":"tag","value":"sanity"},{"name":"tag","value":"api"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_example"},{"name":"host","value":"Panchdev-Chauhan.local"},{"name":"thread","value":"7094-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_example"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"a","value":"1"},{"name":"b","value":"4"},{"name":"expected","value":"5"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Sanity Failures","messageRegex":".*","traceRegex":".*","matchedStatuses":["failed"]},{"name":"Functional Failures","messageRegex":".*","traceRegex":".*","matchedStatuses":["failed"]},{"name":"UI Failures","messageRegex":".*","traceRegex":".*","matchedStatuses":["failed"]},{"name":"Smoke Failures","messageRegex":".*","traceRegex":".*","matchedStatuses":["failed"]},{"name":"Regression Failures","messageRegex":".*","traceRegex":".*","matchedStatuses":["failed"]},{"name":"API Failures","messageRegex":".*","traceRegex":".*","matchedStatuses":["failed"]},{"name":"Slow Tests Failures","messageRegex":".*","traceRegex":".*","matchedStatuses":["failed"]}],"tags":["testrail_id('C1002', 'C1003')","slow","smoke","sanity","api"]},"source":"5836f4768518b809.json","parameterValues":["1","4","5"]}